scenarios:
- name: objectIds handles multiple ids
  code: |-
    const copyFromWindow = require('copyFromWindow');

    const mockData = {
      method: 'clickedObjectIDs',
      eventName: 'click',
      index: 'my-index',
      queryID: 'my-query-id',
      objectIDs: 'foo,bar,baz',
      objectData: [],
      userToken: 'my-user-token',
      authenticatedUserToken: 'my-authenticated-user-token'
    };

    runCode(mockData);

    const aa = copyFromWindow('aa');

    assertThat(aa.queue[aa.queue.length-1]).isEqualTo(['sendEvents', [{
      eventType: 'click',
      eventName: 'click',
      index: 'my-index',
      queryID: 'my-query-id',
      objectIDs: ['foo','bar','baz'],
      objectData: [],
      userToken: 'my-user-token',
      authenticatedUserToken: 'my-authenticated-user-token'
    }]]);
- name: objectIds handles multiple ids that contain commas
  code: |-
    const copyFromWindow = require('copyFromWindow');

    const mockData = {
      method: 'clickedObjectIDs',
      eventName: 'click',
      index: 'my-index',
      queryID: 'my-query-id',
      objectIDs: 'foo\\,bar,ba\\z,with\\,multiple\\,commas',
      objectData: [],
      userToken: 'my-user-token',
      authenticatedUserToken: 'my-authenticated-user-token'
    };

    runCode(mockData);

    const aa = copyFromWindow('aa');

    assertThat(aa.queue[aa.queue.length-1]).isEqualTo(['sendEvents', [{
      eventType: 'click',
      eventName: 'click',
      index: 'my-index',
      queryID: 'my-query-id',
      objectIDs: ['foo,bar','ba\\z', 'with,multiple,commas'],
      objectData: [],
      userToken: 'my-user-token',
      authenticatedUserToken: 'my-authenticated-user-token'
    }]]);
setup: |-
  const setInWindow = require('setInWindow');

  const INSIGHTS_OBJECT_NAME = 'AlgoliaAnalyticsObject';

  setInWindow(INSIGHTS_OBJECT_NAME, 'aa'); // isInitialized() will return true
